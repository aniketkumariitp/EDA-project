use DataWarehouseAnalytics;
-- Exploration Of All Objects In The Database
SELECT * 
FROM information_schema.tables;

-- Exploration Of ALl Columns In The Database
SELECT * FROM INFORMATION_SCHEMA.COLUMNS
WHERE TABLE_NAME =  'dim_customers';

-- Explore All Countries Our Customers Come From
SELECT DISTINCT country From dim_customers;

-- Explore All Categories "THe Major Divisions"
SELECT DISTINCT category , subcategory , product_name From dim_products
ORDER BY 1,2,3;

-- Count of unique category-subcategory-product_name combinations
SELECT COUNT(*) AS total_combinations
FROM (
    SELECT DISTINCT category, subcategory, product_name
    FROM dim_products
) AS distinct_combinations;

-- DATE EXPLORATION

-- Find The Date Of THe First and Last Order
SELECT order_date From fact_sales; 

-- Find the first and last order year
SELECT 
    MIN(YEAR(order_date)) AS first_order_year,
    MAX(YEAR(order_date)) AS last_order_year,
    TIMESTAMPDIFF(
        YEAR,
        MIN(order_date),
        MAX(order_date)
    ) AS order_range_of_years
FROM fact_sales
WHERE order_date IS NOT NULL
  AND order_date > '1000-01-01';

-- Find Difference Between Dates Igorening other Things
SELECT
    MAX(YEAR(order_date)) - MIN(YEAR(order_date)) AS order_range_of_years
FROM fact_sales
WHERE order_date IS NOT NULL
  AND order_date > '1000-01-01';
  
-- Youngest and Oldest Customers
SELECT
 MIN(YEAR(birthdate)) AS youngest,
 TIMESTAMPDIFF(
        YEAR,
        MIN(birthdate),
        CURDATE() 
	) AS youngest_age,
MAX(YEAR(birthdate)) AS oldest,
 TIMESTAMPDIFF(
        YEAR,
        MIN(birthdate),
        CURDATE()
	) AS oldest_age
 From dim_customers
WHERE birthdate IS NOT NULL
  AND YEAR(birthdate) BETWEEN 1000 AND YEAR(CURDATE());
  
-- MEASURE EXPLORATION

-- Find the Total Sales
SELECT SUM(sales_amount) AS total_Sales FROM fact_sales;

-- Find how many items are sold
SELECT SUM(quantity) AS total_quantity FROM fact_sales;

-- Find the average selling price
SELECT AVG(price) AS avg_price FROM fact_sales;
SELECT ROUND(AVG(price)) AS avg_price FROM fact_sales;

-- Find the Total number of Orders
SELECT COUNT(order_number) AS total_orders FROM fact_sales;
SELECT COUNT(DISTINCT order_number) AS total_orders FROM fact_sales;

-- Find the total number of products
SELECT COUNT(product_name) AS total_orders FROM dim_products;

-- Find the total number of customers
select COUNT(customer_key) AS total_customers FROM dim_customers;

-- Find the total number of customers that has placed an order
SELECT COUNT( DISTINCT customer_key) AS total_customers FROM fact_sales;

-- Generate a Report that shows all key metrics of the business
SELECT 'Total Sales' AS measure_name, SUM(sales_amount) AS measure_value FROM fact_sales
UNION ALL
SELECT 'Total Quantity', SUM(quantity) FROM fact_sales
UNION ALL
SELECT 'Average Price', AVG(price) FROM fact_sales
UNION ALL
SELECT 'Total Nr. Orders', COUNT(DISTINCT order_number) FROM fact_sales
UNION ALL
SELECT 'Total Nr. Products', COUNT(product_name) FROM dim_products
UNION ALL
SELECT 'Total Nr. Customers', COUNT(customer_key) FROM dim_customers;


-- MAGNITUDE ANALYSIS

-- Find total customers by countries
SELECT country,COUNT(customer_key) AS total_customers
FROM dim_customers
GROUP BY country
ORDER BY total_customers DESC;

-- Find total customers by gender
SELECT gender,COUNT(customer_key) AS total_customers
FROM dim_customers
GROUP BY gender
ORDER BY total_customers DESC;

-- Find total products by category
SELECT category,COUNT(product_key) AS total_products
FROM dim_products
GROUP BY category
ORdER BY total_products DESC;

-- What is the average costs in each category?
SELECT category,AVG(cost) AS avg_costs
FROM dim_products
GROUP BY category
ORdER BY avg_costs DESC;

-- What is the total revenue generated for each category?
SELECT
    p.category,
    SUM(f.sales_amount) AS total_revenue
FROM fact_sales f
LEFT JOIN dim_products p
    ON p.product_key = f.product_key
GROUP BY p.category
ORDER BY total_revenue DESC;

-- Find total revenue is generated by each customer
SELECT
    c.customer_key,
    c.first_name,
    c.last_name,
    SUM(f.sales_amount) AS total_revenue
FROM fact_sales f
JOIN dim_customers c
  ON f.customer_key = c.customer_key
GROUP BY c.customer_key, c.first_name, c.last_name
ORDER BY total_revenue DESC;

-- What is the distribution of sold items across countries?
SELECT
    c.country,
    SUM(f.sales_amount) AS total_sold_items
FROM fact_sales f
LEFT JOIN dim_customers c
  ON f.customer_key = c.customer_key
GROUP BY c.country
ORDER BY total_sold_items DESC;

-- RANKING

-- Which 5 products generate the highest revenue?
SELECT 
    p.product_name,
    SUM(f.sales_amount) AS total_revenue
FROM fact_sales f
LEFT JOIN dim_products p
    ON p.product_key = f.product_key
GROUP BY p.product_name
ORDER BY total_revenue DESC
LIMIT 5;


-- What are the 5 worst-performing products in terms of sales?
SELECT 
    p.product_name,
    SUM(f.sales_amount) AS total_revenue
FROM fact_sales f
LEFT JOIN dim_products p
    ON p.product_key = f.product_key
GROUP BY p.product_name
ORDER BY total_revenue   
LIMIT 5; 





